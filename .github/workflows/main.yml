name: Node.js examples

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install apt-get packages
      run: |
        sudo apt-get install build-essential curl wget git vim libboost-all-dev
        sudo apt-get install llvm-dev liblld-10-dev libboost-all-dev
    
    - name: Install Tensorflow
      run: |
        wget https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-gpu-linux-x86_64-2.3.0.tar.gz
        sudo tar -C /usr/ -xzf libtensorflow-gpu-linux-x86_64-2.3.0.tar.gz
        cargo install http_proxy
        cargo install mtcnn
        cargo install mobilenet_v2
        
    - name: Install npm packages and Deno
      run: |
        npm i ssvm ssvm-extensions sync-request better-sqlite3
        npm i -g ssvmup
        npm i -g wasm-pack
        curl -fsSL https://deno.land/x/install/install.sh | sh
    
    - name: Functions Interpreter
      run: |
        ssvmup build
        node node/app.js
        ssvmup clean
      working-directory: nodejs/functions
      
    - name: Functions AOT
      run: |
        ssvmup build --enable-aot
        node node/app.js
        ssvmup clean
      working-directory: nodejs/functions
      
    - name: JSON IO Interpreter
      run: |
        ssvmup build
        node node/app.js
        ssvmup clean
      working-directory: nodejs/json_io

    - name: JSON IO AOT
      run: |
        ssvmup build --enable-aot
        node node/app.js
        ssvmup clean
      working-directory: nodejs/json_io

    - name: RSA AOT
      run: |
        ssvmup build --enable-aot
        node node/app.js
        ssvmup clean
      working-directory: nodejs/rsa_example

    - name: WASI
      run: |
        ssvmup build
        node node/app.js
        ssvmup clean
      working-directory: nodejs/wasi

    - name: MobileNet Interpreter
      run: |
        ssvmup build --enable-ext
        cd test/
        node test.js
        cd ..
        ssvmup clean
      working-directory: faas/mobilenet

    - name: MobileNet AOT
      run: |
        ssvmup build --enable-aot --enable-ext
        cd test/
        node test.js
        cd ..
        ssvmup clean
      working-directory: faas/mobilenet

    - name: MTCNN Interpreter
      run: |
        ssvmup build --enable-ext
        cd test/
        node test.js
        cd ..
        ssvmup clean
      working-directory: faas/mtcnn

    - name: MTCNN AOT
      run: |
        ssvmup build --enable-aot --enable-ext
        cd test/
        node test.js
        cd ..
        ssvmup clean
      working-directory: faas/mtcnn

    - name: kmeans example AOT
      run: |
        ssvmup build --enable-aot
        cd node/
        node app.js
        cd ../
        ssvmup clean
      working-directory: nodejs/kmeans

    - name: Deno example
      run: |
        ssvmup build --target deno
        $HOME/.deno/bin/deno run --allow-read --allow-env --unstable deno/test.ts
        ssvmup clean
      working-directory: deno/functions

    - name: Nodejs API
      run: |
        wasm-pack build --target nodejs
        cd node/
        node date.js
        node db.js
        node http.js
        node image.js
        node cleanup.js
        rm -rf ../target ../pkg
      working-directory: nodejs/nodejs_example

    - name: SSVM rust wasi application  example
      run: |
        cargo build --release --target wasm32-wasi
        node app.js
      working-directory: ssvm/file-example
